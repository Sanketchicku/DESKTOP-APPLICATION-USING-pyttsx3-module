So this application acts as a virtual assistant.It uses several python modules like pyttsx3 that 
converts text to speech.Speech Recognition module which converts the mic input into string.




1.What is pyttsx3?
A python library which will help us to convert text to speech. In short, it is a text-to-speech library.
It works offline, and it is compatible with Python 2 as well the Python 3.

engine = pyttsx3.init() # object creation

2.We made a function called speak() at the starting of this tutorial. Now, we will write our speak() function so that it can convert our text to speech.

def speak(audio):
engine.say(audio) 

engine.runAndWait() #Without this command, speech will not be audible to us.

3.return a string output by taking microphone input from the user.

    def TakeCommand:
        r=sr.Recognizer()
        with sr.microphone() as source:
        r.pause_threshold=1
        audio = r.listen(source)

    try:
        print("Recognizing")
        query=r.recognize_google(source=en)
        print(query)
    except:
        print("say that again")
        return "none"
TASK 1:
 if 'wikipedia' in query:  #if wikipedia found in the query then this block will be executed
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2) 
            speak("According to Wikipedia")
            print(results)
            speak(results)
TASK 2:
     elif 'open youtube' in query:
            webbrowser.open("youtube.com")

TASK 3:
    elif 'open google' in query:
            webbrowser.open("google.com")

TASK 4:
    To play music, we need to import a module called os. Import this module 
    directly with an import statement.

elif 'play music' in query:
            music_dir = 'D:\\Non Critical\\songs\\Favorite Songs2'
            songs = os.listdir(music_dir)
            print(songs)    
            os.startfile(os.path.join(music_dir, songs[0]))

            we first opened our music directory and then listed all the songs 
            present in the directory with the help of the os module. With the help
             of os.starfile, you can play any song of your choice. 
             I am playing the first song in the directory. However, you can also play
              a random song with the help of a random module. 
              Every time you command to play music, J.A.R.V.I.S. will play any random song 
              from the song directory.
              

        To send an email, we need to import a module called smtplib.

    Simple Mail Transfer Protocol (SMTP) is a protocol that allows us 
    to send emails and to route emails between mail servers. 
    An instance method called sendmail is present in the SMTP module.
     This instance method allows us to send an email.  It takes 3 parameters:
The sender: Email address of the sender.
The receiver:T Email of the receiver.
The message: A string message which needs to be sent to one or more than one recipient.

def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('youremail@gmail.com', 'your-password')
    server.sendmail('youremail@gmail.com', to, content)
    server.close()

     elif 'email to harry' in query:
            try:
                speak("What should I say?")
                content = takeCommand()
                to = "harryyourEmail@gmail.com"    
                sendEmail(to, content)
                speak("Email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry my friend harry bhai. I am not able to send this email")    